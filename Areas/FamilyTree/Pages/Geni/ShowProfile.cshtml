@page
@model GeniShowProfileModel
@{
    ViewData["Title"] = "Show profile";
}
<h2>Details</h2>
<h3>@ViewData["Message"]</h3>

<div>
    @if (Model.ProfileData != null)
    {
        @if (Model.ProfileData.Url != null)
        {
            <a href="@Html.DisplayFor(model => model.ProfileData.Url)">
                @Html.DisplayFor(model => model.ProfileData.Name)
            </a>
        }
        else
        {
            @Html.DisplayFor(model => model.ProfileData.Name)
        }
        <div>Born: @Html.DisplayFor(model => model.ProfileData.BirthDate) in @Html.DisplayFor(model => model.ProfileData.BirthPlace)</div>
        <div>Died: @Html.DisplayFor(model => model.ProfileData.DeathDate) in @Html.DisplayFor(model => model.ProfileData.DeathPlace)</div>
    }
    @if (Model.ExtendedProfile != null)
    {
        @foreach (ExtendedFamilyInfo family in Model.ExtendedProfile.ChildInFamilies)
        {
<div>
    <h4>@Html.DisplayFor(myTitle => family.Title) parents (@Html.DisplayFor(myTitle => family.MarriageDate))</h4>
    @foreach (SimpleProfileInfo profile in family.Spouses)
    {
        @Html.DisplayFor(myUrl => profile.Sex) <a href="@Html.DisplayFor(myUrl => profile.Url)">
            @Html.DisplayFor(myUrl => profile.Name)
        </a>
        <div>Born: @Html.DisplayFor(myDate => profile.BirthDate) in @Html.DisplayFor(myDate => profile.BirthPlace)</div>
        <div>Died: @Html.DisplayFor(myDate => profile.DeathDate) in @Html.DisplayFor(myDate => profile.DeathPlace)</div>
    }
</div>
<div>
    <h4>@Html.DisplayFor(myTitle => family.Title) siblings</h4>
    @foreach (SimpleProfileInfo profile in family.Children)
    {
        @Html.DisplayFor(myUrl => profile.Sex) <a href="@Html.DisplayFor(myUrl => profile.Url)">
            @Html.DisplayFor(myUrl => profile.Name)
        </a>
        <div>Born: @Html.DisplayFor(myDate => profile.BirthDate) in @Html.DisplayFor(myDate => profile.BirthPlace)</div>
        <div>Died: @Html.DisplayFor(myDate => profile.DeathDate) in @Html.DisplayFor(myDate => profile.DeathPlace)</div>
    }
</div>
        }
        @foreach (ExtendedFamilyInfo family in Model.ExtendedProfile.SpouseInFamilies)
        {
<div>
    <h4>@Html.DisplayFor(myTitle => family.Title) spouses (@Html.DisplayFor(myTitle => family.MarriageDate))</h4>
    @foreach (SimpleProfileInfo profile in family.Spouses)
    {
        @Html.DisplayFor(myUrl => profile.Sex) <a href="@Html.DisplayFor(myUrl => profile.Url)">
            @Html.DisplayFor(myUrl => profile.Name)
        </a>
        <div>Born: @Html.DisplayFor(myDate => profile.BirthDate) in @Html.DisplayFor(myDate => profile.BirthPlace)</div>
        <div>Died: @Html.DisplayFor(myDate => profile.DeathDate) in @Html.DisplayFor(myDate => profile.DeathPlace)</div>
    }
</div>
<div>
    <h4>@Html.DisplayFor(myTitle => family.Title) own children</h4>
    @foreach (SimpleProfileInfo profile in family.Children)
    {
        @Html.DisplayFor(myUrl => profile.Sex) <a href="@Html.DisplayFor(myUrl => profile.Url)">
            @Html.DisplayFor(myUrl => profile.Name)
        </a>
        <div>Born: @Html.DisplayFor(myDate => profile.BirthDate) in @Html.DisplayFor(myDate => profile.BirthPlace)</div>
        <div>Died: @Html.DisplayFor(myDate => profile.DeathDate) in @Html.DisplayFor(myDate => profile.DeathPlace)</div>
    }
</div>
        }
    }
</div>
